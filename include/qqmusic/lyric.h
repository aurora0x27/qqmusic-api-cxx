/*-------------------------------------qqmusic/lyric.h----------------------------------------------
 * Lyric utils -- get and decrypt lyrics 
 *
 * Get lyric and parse them to strings
 *
 * QRC lyric is an xml string, which starts with `<?xml`, and has time stamp for
 * single character:
 *
 * <?xml version="1.0" encoding="utf-8"?>
 * <QrcInfos>
 * <QrcHeadInfo SaveTime="253" Version="100"/>
 * <LyricInfo LyricCount="1">
 * <Lyric_1 LyricType="1" LyricContent="[ti:嘘つきは恋のはじまり]
 * [ar:洛天依]
 * [al:嘘つきは恋の始まり]
 * [by:]
 * [offset:0]
 * [kana:1うそ1こい1111し...1あ1わら1こた1うそ1ほん1とう1い1あめ1ひ1かぜ1ひ1お]
 * [0,4690]嘘(0,293)つ(293,293)き(586,293)は(879,293)恋(1172,293)の(1465,293)
 * は(1758,293)じ(2051,293)ま(2344,293)り(2637,293) (2930,293)-(3223,293) 
 * (3516,293)洛(3809,293)天(4102,293)
 * 依(4395,293)
 * [4690,4690]词(4690,1563)：(6253,1563)４０(7816,781)mP(8597,782)
 * [9380,4690]曲(9380,1563)：(10943,1563)４０(12506,781)mP(13287,782)
 * [14070,4690]编(14070,1172)曲(15242,1172)：(16414,1172)４０(17586,586)
 * mP(18172,586)
 * [18770,677]「(18770,151)ね(18921,151)え(19072,375)
 * [19538,5596]好(19538,207)き(19745,207)な(19952,527)人(20479,1759)
 * い(22238,559)る(22797,223)の(23020,175)？(23195,191)」(23386,135)
 * な(23521,200)ん(23721,182)て(23903,1231)
 * [25394,4879]君(25394,471)が(25865,391)問(26256,311)い(26567,247)
 * か(26814,567)け(27381,407)て(27788,383)き(28171,335)た(28506,1767)
 * [31434,6158]風(31434,784)が(32218,254)吹(32472,263)い(32735,303)て(33038,1655)
 * 髪(34693,520)が(35213,318)揺(35531,319)れ(35850,327)て(36177,1415)
 * [37930,6632]教(37930,471)室(38401,503)の(38904,495)時(39399,543)が(39942,351)
 * 止(40293,359)ま(40652,415)る(41067,1807)
 * [44562,5977]消(44562,688)し(45250,592)ゴ(45842,440)ム(46282,388)が(46670,689)
 * 床(47359,980)に(48339,624)落(48963,340)ち(49303,416)て(49719,820)
 * [50642,3569]す(50642,559)ぐ(51201,711)に(51912,599)拾(52511,535)
 * い(53046,271)上(53317,183)げ(53500,159)て(53659,552)
 * [54330,3584]笑(54330,263)い(54593,255)な(54848,191)が(55039,207)
 * ら(55246,607)答(55853,336)え(56189,310)る(56499,1415)
 * ...
 *
 * Normal lyric format only has time stamp for each line:
 *
 * [ti:嘘つきは恋のはじまり]
 * [ar:洛天依]
 * [al:嘘つきは恋の始まり]
 * [by:]
 * [offset:0]
 * [kana:1うそ1こ....う1い1あめ1ひ1かぜ1ひ1おも1つづ1ひと1め1まえ1]
 * [00:00.00]嘘つきは恋のはじまり - 洛天依
 * [00:04.69]词：４０mP
 * [00:09.38]曲：４０mP
 * [00:14.07]编曲：４０mP
 * [00:18.77]「ねえ
 * [00:19.53]好きな人いるの？」なんて
 * [00:25.39]君が問いかけてきた
 * [00:30.27]
 * [00:31.43]風が吹いて髪が揺れて
 * [00:37.93]教室の時が止まる
 * [00:44.56]消しゴムが床に落ちて
 * [00:50.64]すぐに拾い上げて
 * [00:54.33]笑いながら答える
 * [00:58.10]「いないよ」
 * [01:00.71]ほんのちょっと嘘をついた
 * [01:03.71]バレるのがこわくて
 * ...
 *------------------------------------------------------------------------------------------------*/
#ifndef QQMUSIC_LYRIC_H
#define QQMUSIC_LYRIC_H

#include <qqmusic/result.h>

namespace qqmusic {

/**
 * @struct Lyric
 *
 * @brief 歌词
 * */
struct Lyric {
    std::string lyric; ///< 原始歌词
    std::string trans; ///< 翻译
    std::string roma;  ///< 罗马音
};

/**
 * @brief 获取歌曲的歌词
 *
 * @param mid 歌曲mid
 * @param qrc lyric是否是xml格式, 默认false
 * @param trans 是否附带翻译
 * @param roma 是否附带罗马音
 *
 * @return 原始的歌词字符串, qrc歌词仅经过解码, 还是原始的xml格式
 *
 * @note 异步函数, 返回`Task`
 * */
Task<Result<Lyric>> get_lyric(std::string_view mid,
                              bool qrc = false,
                              bool trans = false,
                              bool roma = false);

/**
 * @brief 获取歌曲的歌词
 *
 * @param id 歌曲id
 * @param qrc lyric是否是xml格式, 默认false
 * @param trans 是否附带翻译
 * @param roma 是否附带罗马音
 *
 * @return 原始的歌词字符串, qrc歌词仅经过解码, 还是原始的xml格式
 *
 * @note 异步函数, 返回`Task`
 * */
Task<Result<Lyric>> get_lyric(uint64_t id, bool qrc = false, bool trans = false, bool roma = false);

} // namespace qqmusic

#endif // !QQMUSIC_LYRIC_H
