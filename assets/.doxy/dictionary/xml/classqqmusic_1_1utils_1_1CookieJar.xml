<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="zh">
  <compounddef id="classqqmusic_1_1utils_1_1CookieJar" kind="class" language="C++" prot="public">
    <compoundname>qqmusic::utils::CookieJar</compoundname>
    <includes refid="cookie_8h" local="no">cookie.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classqqmusic_1_1utils_1_1CookieJar_1a6bb362a779d48dd8cd81b8a7789044be" prot="private" static="no" mutable="no">
        <type>nlohmann::json</type>
        <definition>nlohmann::json qqmusic::utils::CookieJar::content</definition>
        <argsstring></argsstring>
        <name>content</name>
        <qualifiedname>qqmusic::utils::CookieJar::content</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="204" column="20" bodyfile="include/qqmusic/utils/cookie.h" bodystart="204" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a1191a94c38322633defbf61303e517ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qqmusic::utils::CookieJar::CookieJar</definition>
        <argsstring>()</argsstring>
        <name>CookieJar</name>
        <qualifiedname>qqmusic::utils::CookieJar::CookieJar</qualifiedname>
        <briefdescription>
<para>空初始化 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="104" column="5" bodyfile="include/qqmusic/utils/cookie.h" bodystart="104" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a7f79a05750dcc48fa687d0dbe3274981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qqmusic::utils::CookieJar::CookieJar</definition>
        <argsstring>(std::string_view cache)</argsstring>
        <name>CookieJar</name>
        <qualifiedname>qqmusic::utils::CookieJar::CookieJar</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>cache</declname>
        </param>
        <briefdescription>
<para>缓存反序列化, 从<computeroutput>dump</computeroutput>函数产生的缓存构造 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cache</parametername>
</parameternamelist>
<parameterdescription>
<para>缓存 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="112" column="5" bodyfile="include/qqmusic/utils/cookie.h" bodystart="112" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a46c164bb17fb01a2166b657f808abc83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qqmusic::utils::CookieJar::CookieJar</definition>
        <argsstring>(std::string_view cookie_str, std::string_view domain, std::string_view path=&quot;/&quot;)</argsstring>
        <name>CookieJar</name>
        <qualifiedname>qqmusic::utils::CookieJar::CookieJar</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>cookie_str</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
          <defval>&quot;/&quot;</defval>
        </param>
        <briefdescription>
<para>从原始cookie字符串解析 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookie_str</parametername>
</parameternamelist>
<parameterdescription>
<para>请求报文中cookie字符串, 一般存在于<computeroutput>Set-Cookie</computeroutput>字段 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>域名 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>路径, 默认是<computeroutput>/</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="122" column="5" bodyfile="src/utils/cookie.cc" bodystart="9" bodyend="16"/>
        <references refid="namespaceqqmusic_1_1utils_1a64f9e98bd4303eee4a412799048c8583" compoundref="cookie_8cc" startline="249" endline="273">qqmusic::utils::parse_cookie</references>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1aa657e60eec243f17c158a4b18cbaf46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; void &gt;</type>
        <definition>qqmusic::Result&lt; void &gt; qqmusic::utils::CookieJar::set</definition>
        <argsstring>(const Cookie &amp;cookie)</argsstring>
        <name>set</name>
        <qualifiedname>qqmusic::utils::CookieJar::set</qualifiedname>
        <param>
          <type>const <ref refid="structqqmusic_1_1utils_1_1Cookie" kindref="compound">Cookie</ref> &amp;</type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
<para>插入一条Cookie </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookie</parametername>
</parameternamelist>
<parameterdescription>
<para>一个Cookie条目</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>如果对应域名和路径的这个Cookie的键已经存在, 那么会覆盖老的值 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="131" column="21" bodyfile="src/utils/cookie.cc" bodystart="18" bodyend="21"/>
        <references refid="structqqmusic_1_1utils_1_1Cookie_1a8452e33abf079ce507b1310f51d240be" compoundref="cookie_8h" startline="25">qqmusic::utils::Cookie::domain</references>
        <references refid="structqqmusic_1_1utils_1_1Cookie_1aebf1c07b17aaf62c6e7f90e89d8e81cb" compoundref="cookie_8h" startline="35">qqmusic::utils::Cookie::key</references>
        <references refid="structqqmusic_1_1utils_1_1Cookie_1a1dcbfa18a495309dbe34fd2157f0394d" compoundref="cookie_8h" startline="30">qqmusic::utils::Cookie::path</references>
        <references refid="structqqmusic_1_1utils_1_1Cookie_1acdca996920ea6a532dda7c74253e49c5" compoundref="cookie_8h" startline="40">qqmusic::utils::Cookie::value</references>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1aa13147b3ce15a82a73310b8a68acb6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; std::string &gt;</type>
        <definition>qqmusic::Result&lt; std::string &gt; qqmusic::utils::CookieJar::get</definition>
        <argsstring>(std::string_view key, std::optional&lt; std::string &gt; domain=std::nullopt, std::optional&lt; std::string &gt; path=std::nullopt)</argsstring>
        <name>get</name>
        <qualifiedname>qqmusic::utils::CookieJar::get</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>domain</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>path</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>查询对应键的Cookie字段的值 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>键 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>域名, 默认<computeroutput>std::nullopt</computeroutput>, 若不给出则全局寻找 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>路径, 默认<computeroutput>std::nullopt</computeroutput>, 若不给出则在域名下寻找</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="structResult" kindref="compound">Result</ref>&lt;std::string&gt;</computeroutput>, 键值对的值是字符串形式的 找不到会返回<computeroutput>JsonError</computeroutput></para>
</simplesect>
<simplesect kind="note"><para>参数缺省时总是返回第一个找到的键值对的值 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="145" column="21" bodyfile="src/utils/cookie.cc" bodystart="23" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1ad80980930f62e7e3d2fea3910be22481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; void &gt;</type>
        <definition>qqmusic::Result&lt; void &gt; qqmusic::utils::CookieJar::del</definition>
        <argsstring>(std::string_view key, std::optional&lt; std::string &gt; domain=std::nullopt, std::optional&lt; std::string &gt; path=std::nullopt)</argsstring>
        <name>del</name>
        <qualifiedname>qqmusic::utils::CookieJar::del</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>domain</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>path</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>删除对应键的Cookie字段和他的值 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>键 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>域名, 默认<computeroutput>std::nullopt</computeroutput>, 若不给出则全局寻找 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>路径, 默认<computeroutput>std::nullopt</computeroutput>, 若不给出则在域名下寻找</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput><ref refid="structResult" kindref="compound">Result</ref>&lt;void&gt;</computeroutput>, 如果没有对应的键, 会返回<computeroutput>JsonError</computeroutput></para>
</simplesect>
<simplesect kind="note"><para>缺省参数时总是删除第一个找到符合的键值对 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="160" column="21" bodyfile="src/utils/cookie.cc" bodystart="62" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a52f458018fe3472ccb9e1774cfee3372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; std::string &gt;</type>
        <definition>qqmusic::Result&lt; std::string &gt; qqmusic::utils::CookieJar::dump</definition>
        <argsstring>()</argsstring>
        <name>dump</name>
        <qualifiedname>qqmusic::utils::CookieJar::dump</qualifiedname>
        <briefdescription>
<para>序列化Cookie </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>已经序列化的json字符串, 如果出错会返回<computeroutput>JsonError</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="169" column="21" bodyfile="src/utils/cookie.cc" bodystart="124" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a355dfac99af941774e5d23c8e3b84ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; std::string &gt;</type>
        <definition>qqmusic::Result&lt; std::string &gt; qqmusic::utils::CookieJar::serialize</definition>
        <argsstring>(std::string_view domain, std::string_view path=&quot;/&quot;)</argsstring>
        <name>serialize</name>
        <qualifiedname>qqmusic::utils::CookieJar::serialize</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
          <defval>&quot;/&quot;</defval>
        </param>
        <briefdescription>
<para>将对应域名和路径的Cookie序列化成请求报文 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>域名 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>路径, 默认<computeroutput>/</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="177" column="21" bodyfile="src/utils/cookie.cc" bodystart="136" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1acb338d1f1dac14d6386137a3c336f588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; void &gt;</type>
        <definition>qqmusic::Result&lt; void &gt; qqmusic::utils::CookieJar::clear</definition>
        <argsstring>(std::optional&lt; std::string &gt; domain=std::nullopt, std::optional&lt; std::string &gt; path=std::nullopt, std::optional&lt; std::string &gt; key=std::nullopt)</argsstring>
        <name>clear</name>
        <qualifiedname>qqmusic::utils::CookieJar::clear</qualifiedname>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>domain</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>path</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>std::optional&lt; std::string &gt;</type>
          <declname>key</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
<para>删除对应区域的cookie </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="183" column="21" bodyfile="src/utils/cookie.cc" bodystart="168" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a05cceae4db9a26e8604f6d6af8853f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; void &gt;</type>
        <definition>qqmusic::Result&lt; void &gt; qqmusic::utils::CookieJar::update</definition>
        <argsstring>(const CookieJar &amp;cookies)</argsstring>
        <name>update</name>
        <qualifiedname>qqmusic::utils::CookieJar::update</qualifiedname>
        <param>
          <type>const <ref refid="classqqmusic_1_1utils_1_1CookieJar" kindref="compound">CookieJar</ref> &amp;</type>
          <declname>cookies</declname>
        </param>
        <briefdescription>
<para>替换CookieJar的内容 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookies</parametername>
</parameternamelist>
<parameterdescription>
<para>新的Cookies </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="192" column="21" bodyfile="src/utils/cookie.cc" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classqqmusic_1_1utils_1_1CookieJar_1a2d702f54302b7a97a8bc914d373c0378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qqmusic::Result&lt; void &gt;</type>
        <definition>qqmusic::Result&lt; void &gt; qqmusic::utils::CookieJar::merge</definition>
        <argsstring>(const CookieJar &amp;cookies)</argsstring>
        <name>merge</name>
        <qualifiedname>qqmusic::utils::CookieJar::merge</qualifiedname>
        <param>
          <type>const <ref refid="classqqmusic_1_1utils_1_1CookieJar" kindref="compound">CookieJar</ref> &amp;</type>
          <declname>cookies</declname>
        </param>
        <briefdescription>
<para>合并CookieJar内容 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cookies</parametername>
</parameternamelist>
<parameterdescription>
<para>待合并cookie</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>原本Cookie不存在的字段被创建, 重合的字段被新值覆盖 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/qqmusic/utils/cookie.h" line="201" column="21" bodyfile="src/utils/cookie.cc" bodystart="229" bodyend="247"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>简易Cookie管理器, 负责cookie的序列化和反序列化, 依赖<computeroutput>nlohmann::json</computeroutput>实现 目前不支持路径嵌套和<computeroutput>Expires</computeroutput>和<computeroutput>HttpOnly</computeroutput>这样的特性 </para>
    </briefdescription>
    <detaileddescription>
<para>使用Json数据结构来储存Cookie <programlisting filename=".json"><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;domain1&quot;<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;path1&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key1&quot;:<sp/>&quot;value1&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key2&quot;:<sp/>&quot;value2&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;path2&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key1&quot;:<sp/>&quot;value1&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key2&quot;:<sp/>&quot;value2&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;domain2&quot;<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;path1&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key1&quot;:<sp/>&quot;value1&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key2&quot;:<sp/>&quot;value2&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;path2&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key1&quot;:<sp/>&quot;value1&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;key2&quot;:<sp/>&quot;value2&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>不支持path的嵌套, <computeroutput>example.com/menu</computeroutput> 和 <computeroutput>example.com/menu/usr</computeroutput> 被认为是域名<computeroutput>example.com</computeroutput>下两个完全不同的路径.</para>
</simplesect>
不支持解析<computeroutput>HttpOnly</computeroutput>, <computeroutput>Expires</computeroutput>这样的字段, 不是键值对形式的 Cookie条目会被丢弃.</para>
<para><xrefsect id="todo_1_todo000001"><xreftitle>待办事项</xreftitle><xrefdescription><para>需要支持嵌套的路径, 支持非键值对形式的Cookie </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="include/qqmusic/utils/cookie.h" line="98" column="1" bodyfile="include/qqmusic/utils/cookie.h" bodystart="98" bodyend="205"/>
    <listofallmembers>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1acb338d1f1dac14d6386137a3c336f588" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>clear</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a6bb362a779d48dd8cd81b8a7789044be" prot="private" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>content</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a1191a94c38322633defbf61303e517ca" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>CookieJar</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a7f79a05750dcc48fa687d0dbe3274981" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>CookieJar</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a46c164bb17fb01a2166b657f808abc83" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>CookieJar</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1ad80980930f62e7e3d2fea3910be22481" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>del</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a52f458018fe3472ccb9e1774cfee3372" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>dump</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1aa13147b3ce15a82a73310b8a68acb6c9" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>get</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a2d702f54302b7a97a8bc914d373c0378" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>merge</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a355dfac99af941774e5d23c8e3b84ddb" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>serialize</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1aa657e60eec243f17c158a4b18cbaf46f" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>set</name></member>
      <member refid="classqqmusic_1_1utils_1_1CookieJar_1a05cceae4db9a26e8604f6d6af8853f55" prot="public" virt="non-virtual"><scope>qqmusic::utils::CookieJar</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
