<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="zh">
  <compounddef id="tripledes_8cc" kind="file" language="C++">
    <compoundname>tripledes.cc</compoundname>
    <includes local="no">cstdio</includes>
    <includes refid="tripledes_8h" local="no">qqmusic/details/tripledes.h</includes>
    <incdepgraph>
      <node id="3">
        <label>qqmusic/details/tripledes.h</label>
        <link refid="tripledes_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>qqmusic/utils/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tripledes.cc</label>
        <link refid="tripledes_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="2">
        <label>cstdio</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceqqmusic">qqmusic</innernamespace>
    <innernamespace refid="namespaceqqmusic_1_1details">qqmusic::details</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qqmusic/details/tripledes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceqqmusic_1_1details" kindref="compound">qqmusic::details</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;<sp/>key_schedule(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>key_head,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tripledes_crypt_mode<sp/>mode);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>head,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum_intl(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum_intr(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>crypt(utils::buffer&amp;<sp/>buf,<sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;<sp/>key);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initial_permutation(uint32_t*<sp/>a,<sp/>uint32_t*<sp/>b,<sp/>utils::buffer&amp;<sp/>buf);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inverse_permutation(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>utils::buffer&amp;<sp/>buf);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>transform(uint32_t<sp/>state,<sp/>std::vector&lt;uint32_t&gt;<sp/>key);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sbox_bit(uint32_t<sp/>a);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extern<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">tripledes_key_schedule<sp/>tripledes_key_setup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>key_head,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tripledes_crypt_mode<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;uint32_t&gt;&gt;&gt;<sp/>res;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>tripledes_crypt_mode::encrypt)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head,<sp/>key_size,<sp/>tripledes_crypt_mode::encrypt));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head<sp/>+<sp/>8,<sp/>key_size<sp/>-<sp/>8,<sp/>tripledes_crypt_mode::decrypt));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head<sp/>+<sp/>16,<sp/>key_size<sp/>-<sp/>16,<sp/>tripledes_crypt_mode::encrypt));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head<sp/>+<sp/>16,<sp/>key_size<sp/>-<sp/>16,<sp/>tripledes_crypt_mode::decrypt));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head<sp/>+<sp/>8,<sp/>key_size<sp/>-<sp/>8,<sp/>tripledes_crypt_mode::encrypt));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(key_schedule(key_head,<sp/>key_size,<sp/>tripledes_crypt_mode::decrypt));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extern<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tripledes_crypt(utils::buffer&amp;<sp/>buf_in,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utils::buffer&amp;<sp/>buf_out,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tripledes_key_schedule<sp/>key_schedule)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypt(buf_in,<sp/>key_schedule[i]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>processed<sp/>data<sp/>into<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_out.append(buf_in.data(),<sp/>buf_in.size());</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;<sp/>key_schedule(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>key_head,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_size,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tripledes_crypt_mode<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;<sp/>schedule(16,<sp/>std::vector&lt;uint32_t&gt;(6,<sp/>0L));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>key_rnd_shift[]<sp/>=<sp/>{1,<sp/>1,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>1,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>2,<sp/>1};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>key_perm_c[]<sp/>=<sp/>{56,<sp/>48,<sp/>40,<sp/>32,<sp/>24,<sp/>16,<sp/>8,<sp/><sp/>0,<sp/><sp/>57,<sp/>49,<sp/>41,<sp/>33,<sp/>25,<sp/>17,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/>1,<sp/><sp/>58,<sp/>50,<sp/>42,<sp/>34,<sp/>26,<sp/>18,<sp/>10,<sp/>2,<sp/><sp/>59,<sp/>51,<sp/>43,<sp/>35};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>key_perm_d[]<sp/>=<sp/>{62,<sp/>54,<sp/>46,<sp/>38,<sp/>30,<sp/>22,<sp/>14,<sp/>6,<sp/><sp/>61,<sp/>53,<sp/>45,<sp/>37,<sp/>29,<sp/>21,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>5,<sp/><sp/>60,<sp/>52,<sp/>44,<sp/>36,<sp/>28,<sp/>20,<sp/>12,<sp/>4,<sp/><sp/>27,<sp/>19,<sp/>11,<sp/>3};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>key_compression[]<sp/>=<sp/>{13,<sp/>16,<sp/>10,<sp/>23,<sp/>0,<sp/><sp/>4,<sp/><sp/>2,<sp/><sp/>27,<sp/>14,<sp/>5,<sp/><sp/>20,<sp/>9,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22,<sp/>18,<sp/>11,<sp/>3,<sp/><sp/>25,<sp/>7,<sp/><sp/>15,<sp/>6,<sp/><sp/>26,<sp/>19,<sp/>12,<sp/>1,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40,<sp/>51,<sp/>30,<sp/>36,<sp/>46,<sp/>54,<sp/>29,<sp/>39,<sp/>50,<sp/>44,<sp/>32,<sp/>47,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>43,<sp/>48,<sp/>38,<sp/>55,<sp/>33,<sp/>52,<sp/>45,<sp/>41,<sp/>49,<sp/>35,<sp/>28,<sp/>31};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>0,<sp/>d<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>28;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>+=<sp/>bitnum(key_head,<sp/>key_size,<sp/>key_perm_c[i],<sp/>31<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>+=<sp/>bitnum(key_head,<sp/>key_size,<sp/>key_perm_d[i],<sp/>31<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>((c<sp/>&lt;&lt;<sp/>key_rnd_shift[i])<sp/>|<sp/>(c<sp/>&gt;&gt;<sp/>(28<sp/>-<sp/>key_rnd_shift[i])))<sp/>&amp;<sp/>0xfffffff0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>((d<sp/>&lt;&lt;<sp/>key_rnd_shift[i])<sp/>|<sp/>(d<sp/>&gt;&gt;<sp/>(28<sp/>-<sp/>key_rnd_shift[i])))<sp/>&amp;<sp/>0xfffffff0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togen<sp/>=<sp/>mode<sp/>==<sp/>tripledes_crypt_mode::decrypt<sp/>?<sp/>15<sp/>-<sp/>i<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>6;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schedule[togen][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>24;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schedule[togen][j<sp/>/<sp/>8]<sp/>|=<sp/>bitnum_intr(c,<sp/>key_compression[j],<sp/>7<sp/>-<sp/>(j<sp/>%<sp/>8));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>24;<sp/>j<sp/>&lt;<sp/>48;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schedule[togen][j<sp/>/<sp/>8]<sp/>|=<sp/>bitnum_intr(d,<sp/>key_compression[j]<sp/>-<sp/>27,<sp/>7<sp/>-<sp/>(j<sp/>%<sp/>8));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schedule;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>head,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((head[(b<sp/>/<sp/>32)<sp/>*<sp/>4<sp/>+<sp/>3<sp/>-<sp/>(b<sp/>%<sp/>32)<sp/>/<sp/>8]<sp/>&gt;&gt;<sp/>(7<sp/>-<sp/>b<sp/>%<sp/>8))<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>c;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum_intl(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>&lt;&lt;<sp/>b)<sp/>&amp;<sp/>0x80000000)<sp/>&gt;&gt;<sp/>c;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>bitnum_intr(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>uint32_t<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((a<sp/>&gt;&gt;<sp/>(31<sp/>-<sp/>b))<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>c;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>crypt(utils::buffer&amp;<sp/>buf,<sp/>std::vector&lt;std::vector&lt;uint32_t&gt;&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>a<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_permutation(&amp;a,<sp/>&amp;b,<sp/>buf);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>15;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>transform(b,<sp/>key[i])<sp/>^<sp/>a;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>transform(b,<sp/>key[15])<sp/>^<sp/>a;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_permutation(a,<sp/>b,<sp/>buf);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initial_permutation(uint32_t*<sp/>a,<sp/>uint32_t*<sp/>b,<sp/>utils::buffer&amp;<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>input_data<sp/>=<sp/>buf.data();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>buf.size();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>*a<sp/>=<sp/>(bitnum(input_data,<sp/>size,<sp/>57,<sp/>31)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>49,<sp/>30)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>41,<sp/>29)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>33,<sp/>28)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>25,<sp/>27)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>17,<sp/>26)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>9,<sp/>25)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>1,<sp/>24)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>59,<sp/>23)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>51,<sp/>22)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>43,<sp/>21)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>35,<sp/>20)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>27,<sp/>19)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>19,<sp/>18)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>11,<sp/>17)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>3,<sp/>16)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>61,<sp/>15)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>53,<sp/>14)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>45,<sp/>13)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>37,<sp/>12)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>29,<sp/>11)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>21,<sp/>10)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>13,<sp/>9)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>5,<sp/>8)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>63,<sp/>7)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>55,<sp/>6)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>47,<sp/>5)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>39,<sp/>4)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>31,<sp/>3)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>23,<sp/>2)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>15,<sp/>1)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>7,<sp/>0));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>*b<sp/>=<sp/>(bitnum(input_data,<sp/>size,<sp/>56,<sp/>31)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>48,<sp/>30)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>40,<sp/>29)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>32,<sp/>28)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>24,<sp/>27)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>16,<sp/>26)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>8,<sp/>25)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>0,<sp/>24)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>58,<sp/>23)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>50,<sp/>22)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>42,<sp/>21)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>34,<sp/>20)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>26,<sp/>19)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>18,<sp/>18)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>10,<sp/>17)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>2,<sp/>16)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>60,<sp/>15)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>52,<sp/>14)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>44,<sp/>13)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>36,<sp/>12)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>28,<sp/>11)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>20,<sp/>10)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>12,<sp/>9)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>4,<sp/>8)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>62,<sp/>7)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>54,<sp/>6)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>46,<sp/>5)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>38,<sp/>4)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>30,<sp/>3)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>22,<sp/>2)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>14,<sp/>1)<sp/>|<sp/>bitnum(input_data,<sp/>size,<sp/>6,<sp/>0));</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inverse_permutation(uint32_t<sp/>a,<sp/>uint32_t<sp/>b,<sp/>utils::buffer&amp;<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>data[3]<sp/>=<sp/>(bitnum_intr(b,<sp/>7,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>7,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>15,<sp/>5)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>15,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>23,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>23,<sp/>2)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>31,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>31,<sp/>0));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>data[2]<sp/>=<sp/>(bitnum_intr(b,<sp/>6,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>6,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>14,<sp/>5)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>14,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>22,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>22,<sp/>2)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>30,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>30,<sp/>0));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>(bitnum_intr(b,<sp/>5,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>5,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>13,<sp/>5)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>13,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>21,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>21,<sp/>2)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>29,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>29,<sp/>0));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>(bitnum_intr(b,<sp/>4,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>4,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>12,<sp/>5)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>12,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>20,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>20,<sp/>2)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>28,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>28,<sp/>0));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>data[7]<sp/>=<sp/>(bitnum_intr(b,<sp/>3,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>3,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>11,<sp/>5)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>11,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>19,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>19,<sp/>2)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>27,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>27,<sp/>0));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>data[6]<sp/>=<sp/>(bitnum_intr(b,<sp/>2,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>2,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>10,<sp/>5)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>10,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>18,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>18,<sp/>2)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>26,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>26,<sp/>0));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>data[5]<sp/>=<sp/>(bitnum_intr(b,<sp/>1,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>1,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>9,<sp/>5)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>9,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>17,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>17,<sp/>2)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>25,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>25,<sp/>0));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>data[4]<sp/>=<sp/>(bitnum_intr(b,<sp/>0,<sp/>7)<sp/>|<sp/>bitnum_intr(a,<sp/>0,<sp/>6)<sp/>|<sp/>bitnum_intr(b,<sp/>8,<sp/>5)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(a,<sp/>8,<sp/>4)<sp/>|<sp/>bitnum_intr(b,<sp/>16,<sp/>3)<sp/>|<sp/>bitnum_intr(a,<sp/>16,<sp/>2)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intr(b,<sp/>24,<sp/>1)<sp/>|<sp/>bitnum_intr(a,<sp/>24,<sp/>0));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.clear();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.append(data,<sp/>8);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>transform(uint32_t<sp/>state,<sp/>std::vector&lt;uint32_t&gt;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sbox[8][64]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{14,<sp/>4,<sp/><sp/>13,<sp/>1,<sp/>2,<sp/><sp/>15,<sp/>11,<sp/>8,<sp/>3,<sp/>10,<sp/>6,<sp/>12,<sp/>5,<sp/><sp/>9,<sp/><sp/>0,<sp/><sp/>7,<sp/><sp/>0,<sp/><sp/>15,<sp/>7,<sp/><sp/>4,<sp/><sp/>14,<sp/>2,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>1,<sp/><sp/>10,<sp/>6,<sp/>12,<sp/>11,<sp/>9,<sp/><sp/>5,<sp/>3,<sp/>8,<sp/><sp/>4,<sp/>1,<sp/><sp/>14,<sp/>8,<sp/><sp/>13,<sp/>6,<sp/><sp/>2,<sp/><sp/>11,<sp/>15,<sp/>12,<sp/>9,<sp/><sp/>7,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/><sp/>10,<sp/>5,<sp/><sp/>0,<sp/>15,<sp/>12,<sp/>8,<sp/><sp/>2,<sp/>4,<sp/>9,<sp/><sp/>1,<sp/>7,<sp/><sp/>5,<sp/><sp/>11,<sp/>3,<sp/><sp/>14,<sp/>10,<sp/>0,<sp/><sp/>6,<sp/><sp/>13},</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{15,<sp/>1,<sp/><sp/>8,<sp/><sp/>14,<sp/>6,<sp/><sp/>11,<sp/>3,<sp/><sp/>4,<sp/>9,<sp/><sp/>7,<sp/><sp/>2,<sp/>13,<sp/>12,<sp/>0,<sp/><sp/>5,<sp/><sp/>10,<sp/>3,<sp/><sp/>13,<sp/>4,<sp/><sp/>7,<sp/>15,<sp/>2,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/>15,<sp/>12,<sp/>0,<sp/><sp/>1,<sp/><sp/>10,<sp/>6,<sp/><sp/>9,<sp/>11,<sp/>5,<sp/><sp/>0,<sp/>14,<sp/>7,<sp/><sp/>11,<sp/>10,<sp/>4,<sp/><sp/>13,<sp/>1,<sp/><sp/>5,<sp/><sp/>8,<sp/>12,<sp/>6,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/>3,<sp/><sp/>2,<sp/><sp/>15,<sp/>13,<sp/>8,<sp/><sp/>10,<sp/>1,<sp/>3,<sp/><sp/>15,<sp/>4,<sp/>2,<sp/><sp/>11,<sp/>6,<sp/><sp/>7,<sp/><sp/>12,<sp/>0,<sp/><sp/>5,<sp/><sp/>14,<sp/>9},</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{10,<sp/>0,<sp/><sp/>9,<sp/><sp/>14,<sp/>6,<sp/>3,<sp/><sp/>15,<sp/>5,<sp/><sp/>1,<sp/><sp/>13,<sp/>12,<sp/>7,<sp/>11,<sp/>4,<sp/><sp/>2,<sp/><sp/>8,<sp/><sp/>13,<sp/>7,<sp/>0,<sp/><sp/>9,<sp/>3,<sp/>4,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/>10,<sp/>2,<sp/><sp/>8,<sp/><sp/>5,<sp/>14,<sp/>12,<sp/>11,<sp/>15,<sp/>1,<sp/><sp/>13,<sp/>6,<sp/>4,<sp/><sp/>9,<sp/><sp/>8,<sp/><sp/>15,<sp/>3,<sp/><sp/>0,<sp/>11,<sp/>1,<sp/>2,<sp/>12,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/><sp/>10,<sp/>14,<sp/>7,<sp/><sp/>1,<sp/>10,<sp/>13,<sp/>0,<sp/><sp/>6,<sp/><sp/>9,<sp/><sp/>8,<sp/><sp/>7,<sp/>4,<sp/><sp/>15,<sp/>14,<sp/>3,<sp/><sp/>11,<sp/>5,<sp/>2,<sp/><sp/>12},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{7,<sp/>13,<sp/>14,<sp/>3,<sp/>0,<sp/>6,<sp/><sp/>9,<sp/>10,<sp/>1,<sp/><sp/>2,<sp/><sp/>8,<sp/><sp/>5,<sp/>11,<sp/>12,<sp/>4,<sp/><sp/>15,<sp/>13,<sp/>8,<sp/><sp/>11,<sp/>5,<sp/>6,<sp/>15,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>3,<sp/><sp/>4,<sp/><sp/>7,<sp/>2,<sp/>12,<sp/>1,<sp/>10,<sp/>14,<sp/>9,<sp/><sp/>10,<sp/>6,<sp/>9,<sp/><sp/>0,<sp/><sp/>12,<sp/>11,<sp/>7,<sp/><sp/>13,<sp/>15,<sp/>1,<sp/>3,<sp/>14,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/>2,<sp/><sp/>8,<sp/><sp/>4,<sp/>3,<sp/>15,<sp/>0,<sp/>6,<sp/><sp/>10,<sp/>10,<sp/>13,<sp/>8,<sp/>9,<sp/><sp/>4,<sp/><sp/>5,<sp/><sp/>11,<sp/>12,<sp/>7,<sp/><sp/>2,<sp/><sp/>14},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2,<sp/><sp/>12,<sp/>4,<sp/>1,<sp/><sp/>7,<sp/><sp/>10,<sp/>11,<sp/>6,<sp/>8,<sp/>5,<sp/><sp/>3,<sp/>15,<sp/>13,<sp/>0,<sp/><sp/>14,<sp/>9,<sp/><sp/>14,<sp/>11,<sp/>2,<sp/><sp/>12,<sp/>4,<sp/><sp/>7,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13,<sp/>1,<sp/><sp/>5,<sp/>0,<sp/><sp/>15,<sp/>10,<sp/>3,<sp/><sp/>9,<sp/>8,<sp/>6,<sp/><sp/>4,<sp/>2,<sp/><sp/>1,<sp/><sp/>11,<sp/>10,<sp/>13,<sp/>7,<sp/><sp/>8,<sp/><sp/>15,<sp/>9,<sp/><sp/>12,<sp/>5,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/>3,<sp/><sp/>0,<sp/>14,<sp/>11,<sp/>8,<sp/><sp/>12,<sp/>7,<sp/>1,<sp/>14,<sp/>2,<sp/>13,<sp/>6,<sp/><sp/>15,<sp/>0,<sp/><sp/>9,<sp/><sp/>10,<sp/>4,<sp/><sp/>5,<sp/><sp/>3},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{12,<sp/>1,<sp/><sp/>10,<sp/>15,<sp/>9,<sp/><sp/>2,<sp/><sp/>6,<sp/>8,<sp/><sp/>0,<sp/>13,<sp/>3,<sp/><sp/>4,<sp/><sp/>14,<sp/>7,<sp/><sp/>5,<sp/>11,<sp/>10,<sp/>15,<sp/>4,<sp/>2,<sp/>7,<sp/>12,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9,<sp/><sp/>5,<sp/><sp/>6,<sp/><sp/>1,<sp/><sp/>13,<sp/>14,<sp/>0,<sp/>11,<sp/>3,<sp/>8,<sp/><sp/>9,<sp/><sp/>14,<sp/>15,<sp/>5,<sp/><sp/>2,<sp/>8,<sp/><sp/>12,<sp/>3,<sp/><sp/>7,<sp/>0,<sp/>4,<sp/>10,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/>13,<sp/>11,<sp/>6,<sp/><sp/>4,<sp/><sp/>3,<sp/><sp/>2,<sp/>12,<sp/>9,<sp/>5,<sp/><sp/>15,<sp/>10,<sp/>11,<sp/>14,<sp/>1,<sp/>7,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>8,<sp/>13},</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{4,<sp/>11,<sp/>2,<sp/><sp/>14,<sp/>15,<sp/>0,<sp/><sp/>8,<sp/><sp/>13,<sp/>3,<sp/>12,<sp/>9,<sp/><sp/>7,<sp/>5,<sp/><sp/>10,<sp/>6,<sp/><sp/>1,<sp/><sp/>13,<sp/>0,<sp/><sp/>11,<sp/>7,<sp/><sp/>4,<sp/>9,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>10,<sp/>14,<sp/>3,<sp/><sp/>5,<sp/><sp/>12,<sp/>2,<sp/><sp/>15,<sp/>8,<sp/>6,<sp/><sp/>1,<sp/><sp/>4,<sp/>11,<sp/>13,<sp/>12,<sp/>3,<sp/><sp/>7,<sp/><sp/>14,<sp/>10,<sp/>15,<sp/>6,<sp/>8,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>5,<sp/><sp/>9,<sp/><sp/>2,<sp/><sp/>6,<sp/><sp/>11,<sp/>13,<sp/>8,<sp/><sp/>1,<sp/>4,<sp/><sp/>10,<sp/>7,<sp/>9,<sp/><sp/>5,<sp/><sp/>0,<sp/><sp/>15,<sp/>14,<sp/>2,<sp/><sp/>3,<sp/><sp/>12},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sbox8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{13,<sp/>2,<sp/>8,<sp/><sp/>4,<sp/>6,<sp/>15,<sp/>11,<sp/>1,<sp/><sp/>10,<sp/>9,<sp/><sp/>3,<sp/>14,<sp/>5,<sp/><sp/>0,<sp/><sp/>12,<sp/>7,<sp/><sp/>1,<sp/><sp/>15,<sp/>13,<sp/>8,<sp/>10,<sp/>3,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/><sp/>4,<sp/>12,<sp/>5,<sp/>6,<sp/>11,<sp/>0,<sp/><sp/>14,<sp/>9,<sp/><sp/>2,<sp/><sp/>7,<sp/>11,<sp/>4,<sp/><sp/>1,<sp/><sp/>9,<sp/><sp/>12,<sp/>14,<sp/>2,<sp/><sp/>0,<sp/><sp/>6,<sp/>10,<sp/>13,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15,<sp/>3,<sp/>5,<sp/><sp/>8,<sp/>2,<sp/>1,<sp/><sp/>14,<sp/>7,<sp/><sp/>4,<sp/><sp/>10,<sp/>8,<sp/>13,<sp/>15,<sp/>12,<sp/>9,<sp/><sp/>0,<sp/><sp/>3,<sp/><sp/>5,<sp/><sp/>6,<sp/><sp/>11},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t1<sp/>=<sp/>(bitnum_intl(state,<sp/>31,<sp/>0)<sp/>|<sp/>((state<sp/>&amp;<sp/>0xf0000000)<sp/>&gt;&gt;<sp/>1)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>4,<sp/>5)<sp/>|<sp/>bitnum_intl(state,<sp/>3,<sp/>6)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((state<sp/>&amp;<sp/>0x0f000000)<sp/>&gt;&gt;<sp/>3)<sp/>|<sp/>bitnum_intl(state,<sp/>8,<sp/>11)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>7,<sp/>12)<sp/>|<sp/>((state<sp/>&amp;<sp/>0x00f00000)<sp/>&gt;&gt;<sp/>5)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>12,<sp/>17)<sp/>|<sp/>bitnum_intl(state,<sp/>11,<sp/>18)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((state<sp/>&amp;<sp/>0x000f0000)<sp/>&gt;&gt;<sp/>7)<sp/>|<sp/>bitnum_intl(state,<sp/>16,<sp/>23));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>t2<sp/>=<sp/>(bitnum_intl(state,<sp/>15,<sp/>0)<sp/>|<sp/>((state<sp/>&amp;<sp/>0x0000f000)<sp/>&lt;&lt;<sp/>15)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>20,<sp/>5)<sp/>|<sp/>bitnum_intl(state,<sp/>19,<sp/>6)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((state<sp/>&amp;<sp/>0x00000f00)<sp/>&lt;&lt;<sp/>13)<sp/>|<sp/>bitnum_intl(state,<sp/>24,<sp/>11)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>23,<sp/>12)<sp/>|<sp/>((state<sp/>&amp;<sp/>0x000000f0)<sp/>&lt;&lt;<sp/>11)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>28,<sp/>17)<sp/>|<sp/>bitnum_intl(state,<sp/>27,<sp/>18)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((state<sp/>&amp;<sp/>0x0000000f)<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/>bitnum_intl(state,<sp/>0,<sp/>23));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>lrgstate[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t2<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t2<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t2<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0x000000ff,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lrgstate[i]<sp/>^=<sp/>key[i];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>((sbox[0][sbox_bit(lrgstate[0]<sp/>&gt;&gt;<sp/>2)]<sp/>&lt;&lt;<sp/>28)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[1][sbox_bit(((lrgstate[0]<sp/>&amp;<sp/>0x03)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(lrgstate[1]<sp/>&gt;&gt;<sp/>4))]<sp/>&lt;&lt;<sp/>24)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[2][sbox_bit(((lrgstate[1]<sp/>&amp;<sp/>0x0f)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>(lrgstate[2]<sp/>&gt;&gt;<sp/>6))]<sp/>&lt;&lt;<sp/>20)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[3][sbox_bit(lrgstate[2]<sp/>&amp;<sp/>0x3f)]<sp/>&lt;&lt;<sp/>16)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[4][sbox_bit(lrgstate[3]<sp/>&gt;&gt;<sp/>2)]<sp/>&lt;&lt;<sp/>12)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[5][sbox_bit(((lrgstate[3]<sp/>&amp;<sp/>0x03)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(lrgstate[4]<sp/>&gt;&gt;<sp/>4))]<sp/>&lt;&lt;<sp/>8)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(sbox[6][sbox_bit(((lrgstate[4]<sp/>&amp;<sp/>0x0f)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>(lrgstate[5]<sp/>&gt;&gt;<sp/>6))]<sp/>&lt;&lt;<sp/>4)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>sbox[7][sbox_bit(lrgstate[5]<sp/>&amp;<sp/>0x3f)]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bitnum_intl(state,<sp/>15,<sp/>0)<sp/>|<sp/>bitnum_intl(state,<sp/>6,<sp/>1)<sp/>|<sp/>bitnum_intl(state,<sp/>19,<sp/>2)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>20,<sp/>3)<sp/>|<sp/>bitnum_intl(state,<sp/>28,<sp/>4)<sp/>|<sp/>bitnum_intl(state,<sp/>11,<sp/>5)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>27,<sp/>6)<sp/>|<sp/>bitnum_intl(state,<sp/>16,<sp/>7)<sp/>|<sp/>bitnum_intl(state,<sp/>0,<sp/>8)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>14,<sp/>9)<sp/>|<sp/>bitnum_intl(state,<sp/>22,<sp/>10)<sp/>|<sp/>bitnum_intl(state,<sp/>25,<sp/>11)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>4,<sp/>12)<sp/>|<sp/>bitnum_intl(state,<sp/>17,<sp/>13)<sp/>|<sp/>bitnum_intl(state,<sp/>30,<sp/>14)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>9,<sp/>15)<sp/>|<sp/>bitnum_intl(state,<sp/>1,<sp/>16)<sp/>|<sp/>bitnum_intl(state,<sp/>7,<sp/>17)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>23,<sp/>18)<sp/>|<sp/>bitnum_intl(state,<sp/>13,<sp/>19)<sp/>|<sp/>bitnum_intl(state,<sp/>31,<sp/>20)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>26,<sp/>21)<sp/>|<sp/>bitnum_intl(state,<sp/>2,<sp/>22)<sp/>|<sp/>bitnum_intl(state,<sp/>8,<sp/>23)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>18,<sp/>24)<sp/>|<sp/>bitnum_intl(state,<sp/>12,<sp/>25)<sp/>|<sp/>bitnum_intl(state,<sp/>29,<sp/>26)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>5,<sp/>27)<sp/>|<sp/>bitnum_intl(state,<sp/>21,<sp/>28)<sp/>|<sp/>bitnum_intl(state,<sp/>10,<sp/>29)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>bitnum_intl(state,<sp/>3,<sp/>30)<sp/>|<sp/>bitnum_intl(state,<sp/>24,<sp/>31));</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sbox_bit(uint32_t<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&amp;<sp/>32)<sp/>|<sp/>((a<sp/>&amp;<sp/>31)<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/>((a<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>qqmusic::details</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/details/tripledes.cc"/>
  </compounddef>
</doxygen>
